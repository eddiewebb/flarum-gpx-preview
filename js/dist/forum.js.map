{"version":3,"sources":["webpack://@webbinaro/gpx-preview/webpack/bootstrap","webpack://@webbinaro/gpx-preview/external \"flarum.core.compat['app']\"","webpack://@webbinaro/gpx-preview/external \"flarum.core.compat['extend']\"","webpack://@webbinaro/gpx-preview/external \"flarum.core.compat['components/Post']\"","webpack://@webbinaro/gpx-preview/./src/forum/GPXParser.js","webpack://@webbinaro/gpx-preview/./src/forum/gpxMap.js","webpack://@webbinaro/gpx-preview/./src/forum/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","GPXParser","xmlDoc","map","this","trackcolour","trackwidth","mintrackpointdelta","setTrackColour","colour","setTrackWidth","width","setMinTrackPointDelta","delta","translateName","createMarker","point","lon","parseFloat","getAttribute","lat","html","pointElements","getElementsByTagName","length","item","childNodes","nodeValue","nodeName","attributes","attrlen","hasChildNodes","children","childrenlen","nodeType","firstChild","marker","google","maps","Marker","position","LatLng","infowindow","InfoWindow","content","size","Size","event","addListener","open","addTrackSegmentToMap","trackSegment","trackpoints","pointarray","lastlon","lastlat","latlng","push","latdiff","londiff","Math","sqrt","Polyline","path","strokeColor","strokeWeight","addTrackToMap","track","segments","addRouteToMap","route","routepoints","centerAndZoom","pointlist","Array","minlat","maxlat","minlon","maxlon","pointtype","centerlon","centerlat","bounds","LatLngBounds","setCenter","fitBounds","centerAndZoomToLatLngBounds","latlngboundsarray","boundingbox","isEmpty","extend","getSouthWest","getNorthEast","centerlng","lng","getBoundsZoomLevel","addTrackpointsToMap","tracks","documentElement","addWaypointsToMap","waypoints","addRoutepointsToMap","routes","Post","isInitialized","postId","props","post","id","$","each","url","app","forum","attribute","data","session","csrfToken","mapId","console","log","filename","ajax","dataType","success","parser","loadGPXFileIntoGoogleMap","Map","document","getElementById","zoom","mapTypeId","initializers","add","gpxMap"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['components/Post'];","///////////////////////////////////////////////////////////////////////////////\n// loadgpx.4.js\n//\n// Javascript object to load GPX-format GPS data into Google Maps.\n//\n// Copyright (C) 2006 Kaz Okuda (http://notions.okuda.ca)\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// If you use this script or have any questions please leave a comment\n// at http://notions.okuda.ca/geotagging/projects-im-working-on/gpx-viewer/\n// A link to the GPL license can also be found there.\n//\n///////////////////////////////////////////////////////////////////////////////\n//\n// History:\n//    revision 1 - Initial implementation\n//    revision 2 - Removed LoadGPXFileIntoGoogleMap and made it the callers\n//                 responsibility.  Added more options (colour, width, delta).\n//    revision 3 - Waypoint parsing now compatible with Firefox.\n//    revision 4 - Upgraded to Google Maps API version 2.  Tried changing the way\n//               that the map calculated the way the center and zoom level, but\n//               GMAP API 2 requires that you center and zoom the map first.\n//               I have left the bounding box calculations commented out in case\n//               they might come in handy in the future.\n//\n//    5/28/2010 - Upgraded to Google Maps API v3 and refactored the file a bit.\n//                          (Chris Peplin)\n//\n// Author: Kaz Okuda\n// URI: http://notions.okuda.ca/geotagging/projects-im-working-on/gpx-viewer/\n//\n// Updated for Google Maps API v3 by Chris Peplin\n// Fork moved to GitHub: https://github.com/peplin/gpxviewer\n//\n///////////////////////////////////////////////////////////////////////////////\n\nfunction GPXParser(xmlDoc, map) {\n    this.xmlDoc = xmlDoc;\n    this.map = map;\n    this.trackcolour = \"#ff00ff\"; // red\n    this.trackwidth = 5;\n    this.mintrackpointdelta = 0.0001\n}\n\n// Set the colour of the track line segements.\nGPXParser.prototype.setTrackColour = function(colour) {\n    this.trackcolour = colour;\n}\n\n// Set the width of the track line segements\nGPXParser.prototype.setTrackWidth = function(width) {\n    this.trackwidth = width;\n}\n\n// Set the minimum distance between trackpoints.\n// Used to cull unneeded trackpoints from map.\nGPXParser.prototype.setMinTrackPointDelta = function(delta) {\n    this.mintrackpointdelta = delta;\n}\n\nGPXParser.prototype.translateName = function(name) {\n    if(name == \"wpt\") {\n        return \"Waypoint\";\n    }\n    else if(name == \"trkpt\") {\n        return \"Track Point\";\n    }\n    else if(name == \"rtept\") {\n        return \"Route Point\";\n    }\n}\n\n\nGPXParser.prototype.createMarker = function(point) {\n    var lon = parseFloat(point.getAttribute(\"lon\"));\n    var lat = parseFloat(point.getAttribute(\"lat\"));\n    var html = \"\";\n\n    var pointElements = point.getElementsByTagName(\"html\");\n    if(pointElements.length > 0) {\n        for(i = 0; i < pointElements.item(0).childNodes.length; i++) {\n            html += pointElements.item(0).childNodes[i].nodeValue;\n        }\n    }\n    else {\n        // Create the html if it does not exist in the point.\n        html = \"<b>\" + this.translateName(point.nodeName) + \"</b><br>\";\n        var attributes = point.attributes;\n        var attrlen = attributes.length;\n        for(i = 0; i < attrlen; i++) {\n            html += attributes.item(i).name + \" = \" +\n                    attributes.item(i).nodeValue + \"<br>\";\n        }\n\n        if(point.hasChildNodes) {\n            var children = point.childNodes;\n            var childrenlen = children.length;\n            for(i = 0; i < childrenlen; i++) {\n                // Ignore empty nodes\n                if(children[i].nodeType != 1) continue;\n                if(children[i].firstChild == null) continue;\n                html += children[i].nodeName + \" = \" +\n                        children[i].firstChild.nodeValue + \"<br>\";\n            }\n        }\n    }\n\n    var marker = new google.maps.Marker({\n        position: new google.maps.LatLng(lat,lon),\n        map: this.map\n    });\n\n    var infowindow = new google.maps.InfoWindow({\n        content: html,\n        size: new google.maps.Size(50,50)\n    });\n\n    google.maps.event.addListener(marker, \"click\", function() {\n        infowindow.open(this.map, marker);\n    });\n}\n\nGPXParser.prototype.addTrackSegmentToMap = function(trackSegment, colour,\n        width) {\n    var trackpoints = trackSegment.getElementsByTagName(\"trkpt\");\n    if(trackpoints.length == 0) {\n        return;\n    }\n\n    var pointarray = [];\n\n    // process first point\n    var lastlon = parseFloat(trackpoints[0].getAttribute(\"lon\"));\n    var lastlat = parseFloat(trackpoints[0].getAttribute(\"lat\"));\n    var latlng = new google.maps.LatLng(lastlat,lastlon);\n    pointarray.push(latlng);\n\n    for(var i = 1; i < trackpoints.length; i++) {\n        var lon = parseFloat(trackpoints[i].getAttribute(\"lon\"));\n        var lat = parseFloat(trackpoints[i].getAttribute(\"lat\"));\n\n        // Verify that this is far enough away from the last point to be used.\n        var latdiff = lat - lastlat;\n        var londiff = lon - lastlon;\n        if(Math.sqrt(latdiff*latdiff + londiff*londiff)\n                > this.mintrackpointdelta) {\n            lastlon = lon;\n            lastlat = lat;\n            latlng = new google.maps.LatLng(lat,lon);\n            pointarray.push(latlng);\n        }\n\n    }\n\n    var polyline = new google.maps.Polyline({\n        path: pointarray,\n        strokeColor: colour,\n        strokeWeight: width,\n        map: this.map\n    });\n}\n\nGPXParser.prototype.addTrackToMap = function(track, colour, width) {\n    var segments = track.getElementsByTagName(\"trkseg\");\n    for(var i = 0; i < segments.length; i++) {\n        var segmentlatlngbounds = this.addTrackSegmentToMap(segments[i], colour,\n                width);\n    }\n}\n\nGPXParser.prototype.addRouteToMap = function(route, colour, width) {\n    var routepoints = route.getElementsByTagName(\"rtept\");\n    if(routepoints.length == 0) {\n        return;\n    }\n\n    var pointarray = [];\n\n    // process first point\n    var lastlon = parseFloat(routepoints[0].getAttribute(\"lon\"));\n    var lastlat = parseFloat(routepoints[0].getAttribute(\"lat\"));\n    var latlng = new google.maps.LatLng(lastlat,lastlon);\n    pointarray.push(latlng);\n\n    for(var i = 1; i < routepoints.length; i++) {\n        var lon = parseFloat(routepoints[i].getAttribute(\"lon\"));\n        var lat = parseFloat(routepoints[i].getAttribute(\"lat\"));\n\n        // Verify that this is far enough away from the last point to be used.\n        var latdiff = lat - lastlat;\n        var londiff = lon - lastlon;\n        if(Math.sqrt(latdiff*latdiff + londiff*londiff)\n                > this.mintrackpointdelta) {\n            lastlon = lon;\n            lastlat = lat;\n            latlng = new google.maps.LatLng(lat,lon);\n            pointarray.push(latlng);\n        }\n\n    }\n\n    var polyline = new google.maps.Polyline({\n        path: pointarray,\n        strokeColor: colour,\n        strokeWeight: width,\n        map: this.map\n    });\n}\n\nGPXParser.prototype.centerAndZoom = function(trackSegment) {\n\n    var pointlist = new Array(\"trkpt\", \"rtept\", \"wpt\");\n    var minlat = 0;\n    var maxlat = 0;\n    var minlon = 0;\n    var maxlon = 0;\n\n    for(var pointtype = 0; pointtype < pointlist.length; pointtype++) {\n\n        // Center the map and zoom on the given segment.\n        var trackpoints = trackSegment.getElementsByTagName(\n                pointlist[pointtype]);\n\n        // If the min and max are uninitialized then initialize them.\n        if((trackpoints.length > 0) && (minlat == maxlat) && (minlat == 0)) {\n            minlat = parseFloat(trackpoints[0].getAttribute(\"lat\"));\n            maxlat = parseFloat(trackpoints[0].getAttribute(\"lat\"));\n            minlon = parseFloat(trackpoints[0].getAttribute(\"lon\"));\n            maxlon = parseFloat(trackpoints[0].getAttribute(\"lon\"));\n        }\n\n        for(var i = 0; i < trackpoints.length; i++) {\n            var lon = parseFloat(trackpoints[i].getAttribute(\"lon\"));\n            var lat = parseFloat(trackpoints[i].getAttribute(\"lat\"));\n\n            if(lon < minlon) minlon = lon;\n            if(lon > maxlon) maxlon = lon;\n            if(lat < minlat) minlat = lat;\n            if(lat > maxlat) maxlat = lat;\n        }\n    }\n\n    if((minlat == maxlat) && (minlat == 0)) {\n        this.map.setCenter(new google.maps.LatLng(49.327667, -122.942333), 14);\n        return;\n    }\n\n    // Center around the middle of the points\n    var centerlon = (maxlon + minlon) / 2;\n    var centerlat = (maxlat + minlat) / 2;\n\n    var bounds = new google.maps.LatLngBounds(\n            new google.maps.LatLng(minlat, minlon),\n            new google.maps.LatLng(maxlat, maxlon));\n    this.map.setCenter(new google.maps.LatLng(centerlat, centerlon));\n    this.map.fitBounds(bounds);\n}\n\nGPXParser.prototype.centerAndZoomToLatLngBounds = function(latlngboundsarray) {\n    var boundingbox = new google.maps.LatLngBounds();\n    for(var i = 0; i < latlngboundsarray.length; i++) {\n        if(!latlngboundsarray[i].isEmpty()) {\n            boundingbox.extend(latlngboundsarray[i].getSouthWest());\n            boundingbox.extend(latlngboundsarray[i].getNorthEast());\n        }\n    }\n\n    var centerlat = (boundingbox.getNorthEast().lat() +\n            boundingbox.getSouthWest().lat()) / 2;\n    var centerlng = (boundingbox.getNorthEast().lng() +\n            boundingbox.getSouthWest().lng()) / 2;\n    this.map.setCenter(new google.maps.LatLng(centerlat, centerlng),\n            this.map.getBoundsZoomLevel(boundingbox));\n}\n\nGPXParser.prototype.addTrackpointsToMap = function() {\n    var tracks = this.xmlDoc.documentElement.getElementsByTagName(\"trk\");\n    for(var i = 0; i < tracks.length; i++) {\n        this.addTrackToMap(tracks[i], this.trackcolour, this.trackwidth);\n    }\n}\n\nGPXParser.prototype.addWaypointsToMap = function() {\n    var waypoints = this.xmlDoc.documentElement.getElementsByTagName(\"wpt\");\n    for(var i = 0; i < waypoints.length; i++) {\n        this.createMarker(waypoints[i]);\n    }\n}\n\nGPXParser.prototype.addRoutepointsToMap = function() {\n    var routes = this.xmlDoc.documentElement.getElementsByTagName(\"rte\");\n    for(var i = 0; i < routes.length; i++) {\n        this.addRouteToMap(routes[i], this.trackcolour, this.trackwidth);\n    }\n}\n\nexports.GPXParser = GPXParser;","import app from 'flarum/app';\nimport {extend} from 'flarum/extend';\nimport Post from 'flarum/components/Post';\nimport GPXParser from './GPXParser';\n\n/* global $ */\n\nexport default function () {\n    extend(Post.prototype, 'config', function (isInitialized) {\n        if (isInitialized) return;\n        let postId = this.props.post.id();\n        //console.log(this.$('.gpxFile').data('fofUploadDownloadUuid'));\n\n        function loadGPXFileIntoGoogleMap(map, filename) {\n            $.ajax({url: filename,\n                dataType: \"xml\",\n                success: function(data) {\n                    console.log(\"parsing GPS file \" + filename);\n                  var parser = new GPXParser.GPXParser(data, map);\n                  parser.setTrackColour(\"#ff0000\");     // Set the track line colour\n                  parser.setTrackWidth(5);          // Set the track line width\n                  parser.setMinTrackPointDelta(0.001);      // Set the minimum distance between track points\n                  parser.centerAndZoom(data);\n                  parser.addTrackpointsToMap();         // Add the trackpoints\n                  parser.addRoutepointsToMap();         // Add the routepoints\n                  parser.addWaypointsToMap();           // Add the waypoints\n                }\n            });\n        }\n\n        //for each gpx file in this post, loop and map\n        this.$('.gpxFile').each(function( i ) {\n          //console.log(this); //'this' is now a matching div with our URL and UUID\n          //let url = $(this).data('mapUrl');\n          let url = app.forum.attribute('apiUrl') + '/fof/download';\n            url += '/' + $(this).data('fofUploadDownloadUuid');\n            url += '/' + postId;\n            url += '/' + app.session.csrfToken;\n          let mapId = 'map-' + $(this).data('fofUploadDownloadUuid');\n          console.log(url);\n          console.log(mapId);\n\n          var mapOptions = {\n            zoom: 8,\n            mapTypeId: 'roadmap'\n          };\n          var map = new google.maps.Map(document.getElementById(mapId),mapOptions);\n          loadGPXFileIntoGoogleMap(map, url);\n        });\n\n    });\n}\n","import app from 'flarum/app';\n\nimport gpxMap from './gpxMap';\n\nconsole.log(\"RUNNING\");\n\napp.initializers.add('gpx-preview', () => {\n    gpxMap();\n});\n"],"sourceRoot":""}